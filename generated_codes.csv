index,Prompt,Generated Code GPT-2,Generated Code BART,Generated Code Mistral,Actual Code
0,This applet will append Medium bookmarks to a stream in a data.world dataset.,"This applet will append Medium bookmarks to a stream in a data.world dataset.
###
Code:
var title = Trigger.EntryTitle var keyword1 = 'Medium' var keyword2 = 'Business'  var keyword3 = 'Music'  var keyword4 = 'Public'  var keyword5 = 'Publication'  var keyword6 = 'Publication/Publication'  var keyword7 = 'Publication/Publication'  var keyword8 = 'Publication/Publication'  var keyword9 = 'Publication/Publication'  var keyword10 = 'Publication/Public","const pairs = Object.getOwnPropertyNames(Twitter.newTweetByUser.Text).map(prop => prop + ""||"" + pairs[prop]) Datadotworld.append.setPayload(pairs.join(""|||""))","This applet will append Medium bookmarks to a stream in a data.world dataset.
###
var title = (Medium.newBookmarkByYou.Title || """")  var author = (Medium.newBookmarkByYou.Author || """")  var url = (Medium.newBookmarkByYou.Url || """")  var tags = (Medium.newBookmarkByYou.Tags || """")  var createdAt = (Medium.newBookmarkByYou.CreatedAt || """")  var insertInto = 'Medium_Bookmarks'  var createdTS = moment(createdAt).format(""YYYY-MM-DDTHH:mm:ssZ"")  Data.appendToCollection.setPayload(JSON.stringify({Title:title, Author:author, Url:url, Tags:tags, CreatedAt:createdTS}))  Data.appendToCollection.setVariable(`Collection`, Insert.toCollectionLink(Insert.intoCollection(Insert.intoDataspace.getDataspaceID(`@data.world`), Insert.intoDataSet.setDatasetName(Insert.intoDataspace.getDataspaceID(`@data.world`), Insert.intoDataSet.setDataSetName(Insert.intoDataspace.getDataspaceID(`@data.world`), Insert.intoDataSet.setDataSetDescription(`A stream of Medium bookmarks appended by @meddiesapp`), Insert.intoCollection.setCollectionName(Insert.intoDataspace.getDataspaceID(`,`), Insert.intoDataspace.getDataspaceID(`,`), Insert.intoCollection.setCollectionDescription(`A stream of Medium bookmarks appended by @meddiesapp`), Insert.intoCollection.setCollectionPublic(true), Insert.intoCollection.setAutoCollect(false), Insert.intoCollection.setAutoPost(false), Insert.intoCollection.setAutoUpdate(true))))  Data.appendToCollection.setVariable(`InsertInto`, InsertInto)  Data.appendToCollection.append()","const bookmark = (Medium.postBookmarkedByYou as any) const pairs = Object.getOwnPropertyNames(bookmark).map(prop => prop + ""||"" + bookmark[prop]) Datadotworld.append.setPayload(pairs.join(""|||""))"
1,"If Netatmo weather station reports rain amount for yesterday exceeding 5mm (0.2inch), do not water my yard for today.","If Netatmo weather station reports rain amount for yesterday exceeding 5mm (0.2inch), do not water my yard for today.
###
Code:
if (Netatmo.rainYesterdayAmount.MeasuredRainfallMM) {   Netro.noWater.skip() } else {   Netro.noWater.setAmount(Netro.rainYesterdayAmount.MeasuredRainfallMM) }  } else {   Netro.noWater.skip() }  }   if (Netro.noWater.length > 5) {   Netro.noWater",if(parseFloat(Netatmo.rainYesterdayAmount.MeasuredRainfallMM)<5){   Netro.noWater.skip() },"If Netatmo weather station reports rain amount for yesterday exceeding 5mm (0.2inch), do not water my yard for today.
###
var amount = Netatmo.rainamountYesterday.replace(/[^\d\.\-]/g, '') amount = parseFloat(amount) if (amount < 5.0) {    WyzeIrrigate.skip  } else {    WyzeIrrigate.setWateringTime  }",if(parseFloat(Netatmo.rainYesterdayAmount.MeasuredRainfallMM)<5){   Netro.noWater.skip() }
2,"When a specific user posts a tweet that has a URL in it, this Applet will save that URL to Pocket with the ""IFTTT"" tag.","When a specific user posts a tweet that has a URL in it, this Applet will save that URL to Pocket with the ""IFTTT"" tag.
###
Code:
var tweet = Twitter.newTweetByUser.Text;  var url = 'https: //www.googleapis.com/p/IFTTT/v1/embed/5.0.png';  var match = tweet.match(url);  if (match) {  Pocket.readItLater.setUrl(match[0]); } else {  Pocket.readItLater.skip(""Not Pocket related",var tweet = Twitter.newTweetByUser.Text; var regex = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+.~#?&  var match = tweet.match(regex);  if (match) {   Pocket.readItLater.setUrl(match[0]); } else {  },"When a specific user posts a tweet that has a URL in it, this Applet will save that URL to Pocket with the ""IFTTT"" tag.
###
var url = Twit.newTweetByUser.Entities.Url[0].ExpandedUrl if (url) {    Pocket.readItLater.setUrl(url.Link); } else {    Pocket.readItLater.skip(); }","var tweet = Twitter.newTweetByUser.Text;  var regex = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&  var match = tweet.match(regex);  if (match) {   Pocket.readItLater.setUrl(match[0]); } else {   Pocket.readItLater.skip(""No URL""); }"
3,"When tomorrow's forecast has a low temperature of 40F to 50F, add an all-day calendar event mentioning which drawer to get dressed from.","When tomorrow's forecast has a low temperature of 40F to 50F, add an all-day calendar event mentioning which drawer to get dressed from.
###
Code:
var hour = Meta.triggerTime.hour()    if (hour < 40 || hour > 50) {      IfNotifications.sendNotification.skip(""Too late"") }    else {      IfNotifications.sendNotification.skip(""Not dressed"") }     else {      IfNotifications.sendNotification.skip(""Not dressed"") }",if (parseInt(Weather.tomorrowsWeatherAtTime.LowTempFahrenheit) > 50) {   GoogleCalendar.addDetailedEvent.skip(); },"When tomorrow's forecast has a low temperature of 40F to 50F, add an all-day calendar event mentioning which drawer to get dressed from.
###
var Hour = Meta.currentUserTime.hour()  var TimeHour = 24  if(Hour%TimeHour > 0 && Hour%TimeHour <= 12) {    GoogleCalendar.addDetailedEvent.skip(""Too early"")  }  else if(Hour%TimeHour > 12 && Hour%TimeHour <= 23) {    GoogleCalendar.addDetailedEvent.skip(""Too late"")  }  else {    GoogleCalendar.addDetailedEvent.setDetailedDescription(""Drawer: Warm"")    if(Hour%2 == 0) {      GoogleCalendar.addDetailedEvent.setStartTime(new Date(parseInt(Meta.currentUserTime.format(""YYYY-MM-DD""), 10) +"" ""+ ((Hour/2)+1) +"":00"", 10))    }    else {      GoogleCalendar.addDetailedEvent.setStartTime(new Date(parseInt(Meta.currentUserTime.format(""YYYY-MM-DD""), 10) +"" ""+ ((Hour/2)+2) +"":00"", 10))    }  }    GoogleCalendar.addDetailedEvent.setEndTime(new Date(parseInt(Meta.currentUserTime.format(""YYYY-MM-DD""), 10) +"" ""+ ((Hour/2)+3) +"":00"", 10))  }    GoogleCalendar.addDetailedEvent.setLocation(""Getting dressed from"")  }  else {    GoogleCalendar.addDetailedEvent.skip(""Not cold enough"")  }  ###",if (parseInt(Weather.tomorrowsWeatherAtTime.LowTempFahrenheit) < 40) {   GoogleCalendar.addDetailedEvent.skip(); }  if (parseInt(Weather.tomorrowsWeatherAtTime.LowTempFahrenheit) > 50) {   GoogleCalendar.addDetailedEvent.skip(); }
4,Set a Yeelight Scene on exiting an area between 6am and 6pm (06:00 - 17:59),"Set a Yeelight Scene on exiting an area between 6am and 6pm (06:00 - 17:59)
###
Code:
if (Meta.currentUserTime.hour() >= 18 || Meta.currentUserTime.hour() < 6) {   Yeelight.setScene.skip(""Outside of commuting hours"") } else {  Yeelight.setScene.skip(""Not a weekday"") } }  if (Meta.currentUserTime.hour() >= 19 || Meta.currentUserTime.hour() < 6) {   Yeelight.setScene.skip(""Not working hours"")",if (Meta.currentUserTime.hour() >= 18 || Meta.currentTime.minute() < 6) {   Yeelight.setScene.skip('Too Late'); },"Set a Yeelight Scene on exiting an area between 6am and 6pm (06:00 - 17:59)
###
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 18 || timeOfDay < 6) {   YeelightScene.createScene.skip()  } else {   YeelightScene.createScene.setSkip()  }",if (Meta.currentUserTime.hour() >= 18 || Meta.currentUserTime.hour() < 6) {   Yeelight.setScene.skip('Too Late'); }
5,If Boundary Alarm is disarmed and it is nighttime turn on chosen Philips Hue lights (e.g. entry route lights),"If Boundary Alarm is disarmed and it is nighttime turn on chosen Philips Hue lights (e.g. entry route lights)
###
Code:
var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay >= 22 || timeOfDay < 8 ) {   Hue.turnOnAllHue.skip()  } else {     Hue.turnOnAllHue.setBrightnessAllHue.skip()  }               Hue.turnOnAllHue.setBrightnessAll",var timeOfDay = Meta.currentUserTime.hour();  if (timeOfDay >= 7 && timeOfNight < 19) {   Hue.turnOnAllHue.skip() },"If Boundary Alarm is disarmed and it is nighttime turn on chosen Philips Hue lights (e.g. entry route lights) in an attempt to deter potential intruders.
###
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay > 7 && timeOfDay < 19) {    Hue.turnOnAllHue.skip(""Too late to turn on lights."")  } else {    Hue.turnOnAllHue.skip(""Too early to turn on lights."")  }","var season = Meta.currentUserTime.month();  var sunrises = [ 9,  8,  7,  7,  6,  5,  5,  6,  7,  8,  8,  9 ]; var sunsets  = [ 15, 16, 17, 19, 20, 21, 21, 20, 19, 18, 16, 15 ];  var hour = Meta.currentUserTime.hour();   if (hour >= sunrises[season] && hour <= sunsets[season]) {   Hue.turnOnAllHue.skip(); }"
6,"Which ever color tier your latest Super Chat message is, your Hue lights will change to match that color!","Which ever color tier your latest Super Chat message is, your Hue lights will change to match that color!
###
Code:
let color = Meta.currentUserTime.locale('en').toLowerCase()  if (color == 0) {   Hue.setBrightnessAllHue.skip() } else {   Hue.setBrightnessAllHue.setColorAllHue.skip() }    if (color == 1) {   Hue.setBrightnessAllHue.skip() } else {   Hue.setBrightnessAllHue.setColor","if (Youtube.newSuperchat.ColorTier == ""Light blue"") {   Hue.setColorAllHue.setBrightness(""#0092ff"") }","Which ever color tier your latest Super Chat message is, your Hue lights will change to match that color!
###
if (Youtube.newSuperchat.ColorTier == ""Blue"") { Hue.setColorAllHue.setColor(""#0000FF"") } else if (Youtube.newSuperchat.ColorTier == ""Silver"") { Hue.setColorAllHue.setColor(""#C0C0C0"") } else if (Youtube.newSuperchat.ColorTier == ""Gold"") { Hue.setColorAllHue.setColor(""#FFD700"") } else if (Youtube.newSuperchat.ColorTier == ""Red"") { Hue.setColorAllHue.setColor(""#FF0000"") } else if (Youtube.newSuperchat.ColorTier == ""Emerald"") { Hue.setColorAllHue.setColor(""#228B22"") } else if (Youtube.newSuperchat.ColorTier == ""Ruby"") { Hue.setColorAllHue.setColor(""#FF4154"") } else if (Youtube.newSuperchat.ColorTier == ""Sapphire"") { Hue.setColorAllHue.setColor(""#4159E1"") } else if (Youtube.newSuperchat.ColorTier == ""Emerald (2)"") { Hue.setColorAllHue.setColor(""#00FF00"") } else if (Youtube.newSuperchat.ColorTier == ""Aquamarine"") { Hue.setColorAllHue.setColor(""#7FFFD4"") } else if (Youtube.newSuperchat.ColorTier == ""Amethyst"") { Hue.setColorAllHue.setColor(""#9400FD"") } else if (Youtube.newSuperchat.ColorTier == ""Pink"") { Hue.setColorAllHue.setColor(""#FFC0CB"") } else { Hue.setColorAllHue.setColor(""#000000"") } } else { Hue.setColorAllHue.setColor(""#000000"") } }","if (Youtube.newSuperchat.ColorTier == ""Light blue"")   {Hue.setColorAllHue.setColor(""#0092ff"")} if (Youtube.newSuperchat.ColorTier == ""Blue"")   {Hue.setColorAllHue.setColor(""#4148b2"")}"
7,Send an SMS message when the Link collar is charged.,"Send an SMS message when the Link collar is charged.
###
Code:
var minute = Meta.triggerTime.minute()  var minuteString = minute.toString()  var runday = Meta.triggerTime.day()     if(minute%30 > 0 && minute%10 > 0 )     Sms.sendMeText.skip()         Sms.sendMeText.setMessage( ""Link collar charged!"" )       Sms.sendMeText.setMessage( ""Link collar charged!"" ) ",var minute = Meta.triggerTime.minute()  var minuteString = minute.toString()   var runday = new Date(LinkMyPet.collarInfo.CreatedAt).getDay()  if(minute%30 > 0 && minute%15 > 0 )   Sms.sendMeText.skip(),"Send an SMS message when the Link collar is charged.
###
var minute = Meta.triggerTime.minute()  var minuteString = minute.toString()  var hour = Meta.triggerTime.hour()  var day = Meta.triggerTime.day()  var month = Meta.triggerTime.month()  var year = Meta.triggerTime.year()  var datetime = year + ""-"" + month + ""-"" + day + "" "" + hour + "":"" + minuteString  Datadotw.sendMessage.setMessage(""Link collar charged at "" + datetime)  Datadotw.sendMessage.appendToExistingMessage("""")
###","var minute = Meta.triggerTime.minute()  var minuteString = minute.toString()  var runday = Meta.triggerTime.day()  var currentdate = new Date(LinkMyPet.collarInfo.CreatedAt).getDay()    var batteryAmount =  parseInt(LinkMyPet.collarInfo.Battery, 10);  if(minute%30 > 0 && batteryAmount < 100 || (currentdate != runday) )    Sms.sendMeText.skip()"
8,"We have your date night planned ahead of time, just tell us where and what day works for you! Impress your significant other every week with a new plan.","We have your date night planned ahead of time, just tell us where and what day works for you! Impress your significant other every week with a new plan.
###
Code:
var Hour = Meta.triggerTime.hour()    if (Hour < 17 || Hour > 19) {     ImpressMe.sendMeEmail.skip(""Too late"") }    if (Hour < 17 || Hour > 19) {     ImpressMe.sendMeEmail.skip(""Not Late"") }    if (Hour < 17 || Hour > 19) { ",let optionOne = Math.floor((Math.random() * Trakt.recommendedMovies.length)) Email.sendMeEmail.setSubject(`It's night date night!`),"We have your date night planned ahead of time, just tell us where and what day works for you! Impress your significant other every week with a new plan.
###
var options = [  ""Go to a movie"",  ""Try a new restaurant"",  ""Attend a comedy club or open mic"",  ""Have a picnic in the park"",  ""Go for a hike"",  ""Take dance lessons"",  ""Visit a museum"",  ""Stay in and rent a movie""  ]  var option = options[Math.floor(Math.random()*options.length)]  var weekdays = [""Sunday"", ""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday""]  var day = weekdays[Math.floor(Math.random()*weekdays.length)]  var date = Meta.triggerTime.format('MM-DD')  var message = ""Here are some ideas for our date night this week: \n"" + option  Meta.message.setMessage(message)  if (day == ""Sunday"") {    Meta.message.append(""On "" + day)    }  else if (day == ""Monday"") {    Meta.message.append(""On "" + day)    }  else if (day == ""Tuesday"") {    Meta.message.append(""On "" + day)    }  else if (day == ""Wednesday"") {    Meta.message.append(""On "" + day)    }  else if (day == ""Thursday"") {    Meta.message.append(""On "" + day)    }  else if (day == ""Friday"") {    Meta.message.append(""On "" + day)    }  else if (day == ""Saturday"") {    Meta.message.append(""On "" + day)    }  else if (day == ""Saturday"") {    Meta.message.append(""On "" + day)    }  else {    Meta.message.append(""On "" + day)  }  Meta.message.append("":\n"" + date)    Meta.message.append(""\nI'll leave the reservation up to you, but here's the plan:"")  var url = option.match(/Go to a movie/i)  if (url) {   ","let optionOne = Math.floor((Math.random() * Trakt.recommendedMovies.length)) let optionTwo = Math.floor((Math.random() * Yelp.searchBusiness.length)) Email.sendMeEmail.setSubject(`It's night date night!`) Email.sendMeEmail.setBody(`Tonight you should watch ${Trakt.recommendedMovies[optionOne].MovieTitle}, and order dinner from ${Yelp.searchBusiness[optionTwo].BusinessName}! `)"
9,This applet will save 1p for every 10 metres you cycle or run using Strava.,"This applet will save 1p for every 10 metres you cycle or run using Strava.
###
Code:
var distance = Math.floor((Math.random() * distance/1000)) var amount = distance/1000; Monzo.potDeposit.setAmount(amount.toFixed(2)); Monzo.potDeposit.setAmount(amount.toFixed(5)); Monzo.potDeposit.setAmount(amount.toFixed(10)); Monzo.potDeposit.setAmount(amount.toFixed(15)); Monzo.potDeposit.setAmount(amount",var distance = parseInt(Strava.newActivityByYou.DistanceMeters); var amount = distance/1000; Monzo.potDeposit.setAmount(amount.toFixed(2));,"This applet will save 1p for every 10 metres you cycle or run using Strava.
###
var distMeters = parseInt(Strava.newActivityByYou.DistanceMeters);  if (distMeters % 100 > 0) {   Monzo.potDeposit.setAmount(distMeters/1000.0);  Monzo.potDeposit.setTags(""Strava""); } else {   Monzo.potDeposit.skip(""Distance round number required""); } Monzo.potDeposit.setNote(""Strava: "" + Strava.newActivityByYou.Sport + "" for "" + Math.round(distMeters/1000.0) + "" km on "" + Strava.newActivityByYou.StartDatetime.format('dddd') + "" "" + Strava.newActivityByYou.StartDatetime.format('MMMM') + "" "" + Strava.newActivityByYou.StartDatetime.format('DO') + "" "" + Strava.newActivityByYou.StartDatetime.format('YYYY') + "" (https://www.strava.com/activities/"" + Strava.newActivityByYou.Id + "")"");",var distance = parseInt(Strava.newActivityByYou.DistanceMeters); var amount = distance/1000; Monzo.potDeposit.setAmount(amount.toFixed(2));
10,This applet appends new favorite Tweets to a stream in a data.world dataset.,"This applet appends new favorite Tweets to a stream in a data.world dataset.
###
Code:
var tweet = Twitter.newFavoriteTweetByUser.Text  var title = tweet.indexOf( '#FavoriteTweetByUser' ).toLowerCase()    if (title.indexOf( '#FavoriteTweetByUser' ) < 0 ) {                                                ","const tweet = Twitter.newFavoriteTweet.format('dddd').toLowerCase() const pairs = Object.getOwnPropertyNames(Tweet).map(prop => prop + '|||' + tweet[prop]) Datadotworld.append.setPayload(pairs.join(""|||""))","This applet appends new favorite Tweets to a stream in a data.world dataset.
###
var tweet = Twitter.newFavoriteTweet.Text; Datadotworld.appendToDataset.setPayload(JSON.stringify({""FavoriteTweet"": tweet}));","const tweet = (Twitter.newFavoriteTweet as any) const pairs = Object.getOwnPropertyNames(Twitter.newFavoriteTweet).map(prop => prop + ""||"" + tweet[prop]) Datadotworld.append.setPayload(pairs.join(""|||""))"
11,Report yesterday's rainfall measurement from your Netatmo device to Netro. Netro will use it to update schedules.,"Report yesterday's rainfall measurement from your Netatmo device to Netro. Netro will use it to update schedules.
###
Code:
if (Netro.currentWeather[0].currentTime.locale('en').isoWeekday() >= 22) {   Netro.updateWeather[Netro.currentWeather[0].currentTime.locale('en').isoWeekday()].skip() } else {   Netro.updateWeather[Netro.currentWeather[0].currentTime.locale('en').isoWeekday()].skip() } Netro.setLocation(",if (parseFloat(Netatmo.rainYesterdayMeasuredRainfall.RainfallMM)<0) {   Netro.setWeather.skip() },"Report yesterday's rainfall measurement from your Netatmo device to Netro. Netro will use it to update schedules.
###
var measurement = parseFloat(Netatmo.rainTodaySinceMidnight.MeanValueInMillimeters);  var report = ""The average rainfall today was "" + measurement + "" millimeters. ""  Netro.setPublicSchedule.setReport(report);  Netro.setPublicSchedule.skip();  ###","Netro.reportWeather.setDate(Netatmo.rainYesterdayAmount.MeasuredAt) Netro.reportWeather.setRain(Netatmo.rainYesterdayAmount.MeasuredRainfallMM) Netro.reportWeather.setRainProb(""100"")"
12,"Whenever you come home, this Applet turns on your Govee lights unless it's currently sunny.","Whenever you come home, this Applet turns on your Govee lights unless it's currently sunny.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 8 ) {     IfNotifications.sendNotification.skip(""Outside of morning hours"") }  else {     Govee.turnOnDiscrete.skip(""Not a weekday"") }   } else {     Govee.turnOnDiscrete.skip(""Not working hours"") }  }  else",let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentWeather.isBefore(sunset);  if (afterSunrise && beforeSunsets) {   Govee.turnOnAllHue.skip(`Its still daytime so we're leaving the lights off`); },"Whenever you come home, this Applet turns on your Govee lights unless it's currently sunny.
###
var hour = Meta.currentUserTime.hour()  if (hour > 16 || hour < 8) {   Govee.poweron.skip(""Its still daytime, let's save some energy!"") } else {   Govee.poweron.setScene('comeHome') }",let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {    Govee.lightBrightness.skip(`Its still daytime so we're leaving the lights off`); }
13,"Enter your home address on the map and when you enter the radius your Hue lights will turn on, unless it's still light outside!","Enter your home address on the map and when you enter the radius your Hue lights will turn on, unless it's still light outside!
###
Code:
let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {   Hue.turnOnAllHue.skip(`",var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 7 && timeOfSun < 19) {   Hue.turnOnAllHue.skip() },"Enter your home address on the map and when you enter the radius your Hue lights will turn on, unless it's still light outside!
###
var sunrise = moment(Weather.currentWeather[0].SunriseAt); var sunset = moment(Weather.currentWeather[0].SunsetAt); var currentTime = Meta.currentUserTime; var afterSunrise = currentTime.isAfter(sunrise); var beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {   Hue.turnOnAllHue.skip(`Its still daytime so we're leaving the lights off`) } else {   Hue.turnOnAllHue.setBrightness(`255`)  }  ###",let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {    Hue.turnOnAllHue.skip(`Its still daytime so we're leaving the lights off`); }
14,Used to automatically post files from a specific Google Drive folder into a Slack channel of your choosing.,"Used to automatically post files from a specific Google Drive folder into a Slack channel of your choosing.
###
Code:
var path = Meta.currentUserTime.locale('en').split('\');  Slack.postToChannel.setMessage(path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "", path.join("" "",",if (Trigger.Filename.match(/~\$/i)) {  Slack.postToChannel.skip('Temp File Was Skipped') },"Used to automatically post files from a specific Google Drive folder into a Slack channel of your choosing.
###
var folderId = ""15gH8wWj2-n21f1WcjZmUmWyM12bvKD0x""; var file = Feed.newFeedItemFromFolder.File; if (file.FolderId != folderId) {   Slack.postToChannel.skip(""Not in folder: "" + folderId); } else {   Slack.postToChannel.setMessage(file.DownloadUrl); }
###",if (Trigger.Filename.match(/~\$/i)) {  Slack.postToChannel.skip('Temp File Was Skipped')  }
15,"Whenever you come home, turn on your lights automatically unless it's currently sunny outside.","Whenever you come home, turn on your lights automatically unless it's currently sunny outside.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 8 ) {     IfNotifications.sendNotification.skip(""Outside of daytime hours"") } else {      IfNotifications.sendNotification.skip(""Not a weekday"") }     } else {     IfNotifications.sendNotification.skip(""Not working hours"") }    }   else {",let sunrise = moment(Weather.currentWeather[0].SunriseAt); if (sunrise && sunset) {   Wyzecam.poweron.skip(`Its still daytime so we're leaving the lights off`); },"Whenever you come home, turn on your lights automatically unless it's currently sunny outside.
###
var sunrise = moment(Weather.currentWeather[0].SunriseAt); var sunset = moment(Weather.currentWeather[0].SunsetAt); var currentTime = Meta.currentUserTime; var afterSunrise = currentTime.isAfter(sunrise); var beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {    } else {     Kasa.turnOn.skip(`We're saving energy by not turning on lights when it's still sunny outside`); }",let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {    Magichue.poweron.skip(`Its still daytime so we're leaving the lights off`); }
16,"Your phone will be called with the specified message if Arlo detects motion, but only after 9pm and until 8am.","Your phone will be called with the specified message if Arlo detects motion, but only after 9pm and until 8am.
###
Code:
var hour = Meta.triggerTime.hour()    if (hour < 22 || hour > 8) {   Arlo.callMyDevice.skip()  }   else {    Arlo.callMyDevice.setMessage(`Your phone is calling today!`)  }    else {    Arlo.callMyDevice.setMessage(`Your phone is currently charging! You should probably turn it on!","var hour = Meta.triggerTime.hour()  if (hour < 8 && hour > 21) {   PhoneCall.callMyPhone.skip(""Too late"") }","Your phone will be called with the specified message if Arlo detects motion, but only after 9pm and until 8am.
###
var timeOfDay = Meta.currentUserTime.hour()    if (timeOfDay >= 8 && timeOfDay < 21) {    PhoneCall.callMyPhone.skip()  } else {    PhoneCall.callMyPhone.setMessage(Arlo.motionDetectedByCamera)  }",var hour = Meta.triggerTime.hour(); if (hour > 8 && hour < 21) {   PhoneCall.callMyPhone.skip(); }
17,Twitter every time LumanyGameplay publishes a new video containing the word fantasy in the title,"Twitter every time LumanyGameplay publishes a new video containing the word fantasy in the title
###
Code:
let title=Youtube.newPublicVideoFromSubscriptions.Title; if(title.toUpperCase().indexOf(""FANTASY"") ==-1){   LumanyGameplay.postNewTweet.skip(""Not Contains the word""+title+""in the title""); } else{   LumanyGameplay.postNewTweet.setUrl(title+""in the title""); } } else{   LumanyGameplay.postNewTweet.setUrl(""https: ","let title=Youtube.newPublicVideoFromSubscriptions.Title; if(title.toUpperCase().indexOf(""FANTASY"") ==-1){   Twitter.postNewTweet.skip(""Not Contains the word""+title+""in the title""); }","Twitter every time LumanyGameplay publishes a new video containing the word fantasy in the title.
###
if (Twitter.newTweetByUser.Text.indexOf(""fantasy"") == -1) {   Twitter.postNewTweet.setMessage(""No new video with 'fantasy' in the title."") } else {   YouTube.newPublicVideoFromSubscriptions.setMessage(""New video from LumanyGameplay: "" + YouTube.newPublicVideoFromSubscriptions.Title)   Twitter.postNewTweet.setMessage(YouTube.newPublicVideoFromSubscriptions.Title) }    Twitter.postNewTweet.setAwaitReply(false)    Twitter.postNewTweet.setUseSubstitutions(true)    Twitter.postNewTweet.setPostInProfileMessage(false)    Twitter.postNewTweet.setIncludeWebPagePreviews(true)    Twitter.postNewTweet.setImageAspectRatio(null)    Twitter.postNewTweet.setTwitterAddComment(null)    Twitter.postNewTweet.setTwitterAddUrl(null)    Twitter.postNewTweet.setTwitterAddUser(null)    Twitter.postNewTweet.setTwitterAddHashtag(null)    Twitter.postNewTweet.setPostAsDraft(false)    Twitter.postNewTweet.setPostInDirectory(null)    Twitter.postNewTweet.setRecipientId(null)    Twitter.postNewTweet.setRecipientUserName(null)    Twitter.postNewTweet.setRecipientEmail(null)    Twitter.postNewTweet.setIncludeUserEmail(false)    Twitter.postNewTweet.setSendNotificationEmail(false)    Twitter.postNewTweet.setSendNotificationToPhone(false)    Twitter.postNewTweet.setSendNotificationToTwitter(true)    Twitter.postNewTweet.setSendNotificationToFacebook(false)    Twitter.postNewTweet.setSendNotificationToLinkedIn(false)    Twitter.postNewTweet.setSendNotificationToSms(false)    Twitter.postNewTweet.setSendNotificationToChatapp(false)    Twitter.postNewTweet.setSendNotificationToWhatsApp(false)","let title=Youtube.newPublicVideoFromSubscriptions.Title; if(title.toUpperCase().indexOf(""FANTASY"") ==-1){   Twitter.postNewTweet.skip(""Not Contains the word""+title+""in the title""); }"
18,"When spending on entertainment, take the amount from a Pot of your choosing","When spending on entertainment, take the amount from a Pot of your choosing
###
Code:
if ( Monzo.cardPurchase.Category == ""Entertainment"" ) {   Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency)  } else {   Monzo.potWithdraw.skip(""Not an Entertainment Purchase"")  }  } else {   Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency)  }  } else {   Monzo.potWithdraw.skip(""Not","if ( Monzo.cardPurchase.Category == ""Entertainment"" ) {    if (Monzo.potWithdraw.AmountInAccountCurrency.indexOf(""$10"") == -1) {  }","When spending on entertainment, take the amount from a Pot of your choosing
###
if(Monzo.potDeposit.Amount<1){    Monzo.potWithdraw.setAmount(Number(Entertainment.isWatchingTV.Amount))    Monzo.potWithdraw.setPot(""Watching TV Pot"")  }  else if(Monzo.potDeposit.Amount<2){    Monzo.potWithdraw.setAmount(Number(Entertainment.readingABook.Amount))    Monzo.potWithdraw.setPot(""Reading Pot"")  }  else if(Monzo.potDeposit.Amount<3){    Monzo.potWithdraw.setAmount(Number(Entertainment.playingANewGame.Amount))    Monzo.potWithdraw.setPot(""Gaming Pot"")  }  else if(Monzo.potDeposit.Amount<4){    Monzo.potWithdraw.setAmount(Number(Entertainment.cooking.Amount))    Monzo.potWithdraw.setPot(""Cooking Pot"")  }  else if(Monzo.potDeposit.Amount<5){    Monzo.potWithdraw.setAmount(Number(Entertainment.playingMusic.Amount))    Monzo.potWithdraw.setPot(""Music Pot"")  }  else if(Monzo.potDeposit.Amount<6){    Monzo.potWithdraw.setAmount(Number(Entertainment.painting.Amount))    Monzo.potWithdraw.setPot(""Painting Pot"")  }  else if(Monzo.potDeposit.Amount<7){    Monzo.potWithdraw.setAmount(Number(Entertainment.juggling.Amount))    Monzo.potWithdraw.setPot(""Juggling Pot"")  }  else if(Monzo.potDeposit.Amount<8){    Monzo.potWithdraw.setAmount(Number(Entertainment.photography.Amount))    Monzo.potWithdraw.setPot(""Photography Pot"")  }  else{    Monzo.potWithdraw.skip()  }","if ( Monzo.cardPurchase.Category == ""Entertainment"" ) {    Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency)  } else {    Monzo.potWithdraw.skip(""Not an Entertainment Purchase"")  }"
19,"When tomorrow's forecast has a low temperature of 40F to 50F, add an all-day calendar event mentioning which drawer to get dressed from.","When tomorrow's forecast has a low temperature of 40F to 50F, add an all-day calendar event mentioning which drawer to get dressed from.
###
Code:
var hour = Meta.triggerTime.hour()    if (hour < 40 || hour > 50) {      IfNotifications.sendNotification.skip(""Too late"") }    else {      IfNotifications.sendNotification.skip(""Not dressed"") }     else {      IfNotifications.sendNotification.skip(""Not dressed"") }",if (parseInt(Weather.tomorrowsWeatherAtTime.LowTempFahrenheit) > 50) {   GoogleCalendar.addDetailedEvent.skip(); },"When tomorrow's forecast has a low temperature of 40F to 50F, add an all-day calendar event mentioning which drawer to get dressed from.
###
var temp = parseInt(Weather.tomorrowsWeatherAtTime.ForecastLow TemperatureFahrenheit); if (temp >= 50 && temp <= 40) {    GoogleCalendar.addDetailedEvent.setSubject(""Get dressed from Drawer 1""); } else {    GoogleCalendar.addDetailedEvent.skip(""Too warm""); }",if (parseInt(Weather.tomorrowsWeatherAtTime.LowTempFahrenheit) < 40) {   GoogleCalendar.addDetailedEvent.skip(); }  if (parseInt(Weather.tomorrowsWeatherAtTime.LowTempFahrenheit) > 50) {   GoogleCalendar.addDetailedEvent.skip(); }
20,"Turn on Wemo Switch After Garage Door Opens (After 5pm). Uses MyQ to detect garage door open and if it's after 5pm it will turn on Wemo switch; otherwise, it won't do anything.","Turn on Wemo Switch After Garage Door Opens (After 5pm). Uses MyQ to detect garage door open and if it's after 5pm it will turn on Wemo switch; otherwise, it won't do anything.
###
Code:
var hour = Meta.triggerTime.hour()   if (hour < 22 || hour > 5) {   WemoSwitch.turnOn.skip()  } else {   WemoSwitch.turnOn.skip()  }   if (hour >= 17 || hour > 19) {   WemoSwitch.turnOn.skip() ",var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay > 17 || timeofDay < 5) {    WemoSwitch.attributeOnDiscrete.skip()  },"Turn on Wemo Switch After Garage Door Opens (After 5pm). Uses MyQ to detect garage door open and if it's after 5pm it will turn on Wemo switch; otherwise, it won't do anything.
###
if (Meta.currentUserTime < ""17:00:00"") {    WemoSwitch.attributeLightOnDiscrete.skip();  } else {    WemoSwitch.attributeLightOnDiscrete.execute();  }","var hour     = Meta.currentUserTime.hour() if (hour < 17) {   WemoSwitch.attributeSocketOnDiscrete.skip(""not in hour timing"") }"
21,This Applet will send you and email when a DART rider alert goes out during weekday commuting hours (7-10am and 5-7pm).,"This Applet will send you and email when a DART rider alert goes out during weekday commuting hours (7-10am and 5-7pm).
###
Code:
var Hour = Meta.currentUserTime.hour() var Day = Meta.currentUserTime.day()    if (Hour <7 || Hour > 10) {   Email.sendMeEmail.skip(""Outside of commuting hours"") }    if (Day == 6 || Day == 7) {   Email.sendMeEmail.skip(""Not a weekday"") }    if (Hour > 19 || Hour","var Hour = Meta.currentUserTime.hour() var Day    Hour <7 || (Hour > 10 && Hour < 17) || Hour > 19) {   IfNotifications.sendNotification.skip(""Outside of commuting hours"") }   if (Day == 6 || Day == 7){   Email.sendMeEmail.skip('Not a weekday') }","This Applet will send you and email when a DART rider alert goes out during weekday commuting hours (7-10am and 5-7pm).
###
var Hour = Meta.currentUserTime.hour() var Day = Meta.currentUserTime.day()   if (Hour < 7 || (Hour > 10 && Hour < 17) || Hour > 19 ) {     Email.sendMeEmail.skip(`Not commuting hours`) }   if (Day == 6 || Day == 7) {     Email.sendMeEmail.skip(`Not weekday`) }   DartRiderAlert.triggerAlert.then(function(alertText){     Email.sendMeEmail.setSubject(`DART Alert: ${alertText}`)     Email.sendMeEmail.setBody(`${alertText}`) })","var Hour = Meta.currentUserTime.hour() var Day = Meta.currentUserTime.day()   if (Hour <7 || (Hour > 10 && Hour < 17) || Hour > 19) {   Email.sendMeEmail.skip(""Outside of commuting hours"") }   if (Day == 6 || Day == 7) {   Email.sendMeEmail.skip(""Not a weekday"") }"
22,Twitter every time The_DannyCraft publishs a new video containing the word fantasy in the title,"Twitter every time The_DannyCraft publishs a new video containing the word fantasy in the title
###
Code:
var title = Trigger.EntryTitle var keyword1 = 'FANTASY'  var keyword2 = 'MOSTLY DREAMS'  var keyword3 = 'ARTICLES'  var keyword4 = 'ARTICLES ABOUT DIFFERENT ARTICLES'  var keyword5 = 'ARTICLES ABOUT DIFFERENT ARTICLES ABOUT DIFFERENT ARTICLES'  var keyword6 = 'ARTICLES ABOUT DIFFERENT DIFFERENT DIF","let title=Youtube.newPublicVideoFromSubscriptions.Title; if(title.toUpperCase().indexOf(""FANTASY"") ==-1){   Twitter.postNewTweet.skip(""Not Contains the word""+title+""in the title""); }","Twitter every time The_DannyCraft publishs a new video containing the word fantasy in the title
###
var title = Youtube.newPublicVideoFromSubscriptions.Title;  if (title.indexOf(""fantasy"") < 0) {   Twitter.postNewTweet.skip();  }  else {   Twitter.postNewTweet.setTweet(""#newYoutubeFantasyVideo by The_DannyCraft #newvideo #fantasy"");  }","let title=Youtube.newPublicVideoFromSubscriptions.Title; if(title.toUpperCase().indexOf(""FANTASY"") ==-1){   Twitter.postNewTweet.skip(""Not Contains the word""+title+""in the title""); }"
23,This applet will send your robot back to the dock when you get home after 5pm.,"This applet will send your robot back to the dock when you get home after 5pm.
###
Code:
var hour = Meta.currentUserTime.hour()    if (hour < 22 || hour > 5) {        IfNotifications.sendNotification.skip(""Too late"") }     else {         IfNotifications.sendNotification.skip(""Not connected"") }                             ",var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay > 17 || timeHour < 5) {    AndroidDevice.sendDeviceBack.skip()  },"This applet will send your robot back to the dock when you get home after 5pm.
###
var hour = Meta.currentUserTime.hour()  if (hour < 17) {    RobotOS.returnToDock.skip(""Too early"")  } else {    RobotOS.returnToDock.go()  }",var timeOfDay = Meta.currentUserTime.hour();    if (timeOfDay > 0 && timeOfDay < 17) {    Irobot.dockRobot.skip()  }
24,ifttjx6TX3gy: New article in folder News > email,"ifttjx6TX3gy: New article in folder News > email
###
Code:
var hour = Meta.triggerTime.hour()       if (hour < 22 || hour > 9) {       Email.sendMeEmail.skip(""Too late"") }       if (hour > 19 && hour < 9) {      Email.sendMeEmail.skip(""Not Late"") }       if (hour > 19 && hour < 9) {     Email.sendMeEmail.",var hour = Meta.currentUserTime.hour()    if(hour<8 || hour>=21){   Email.sendMeEmail.skip()  },"ifttjx6TX3gy: New article in folder News > email
###
var hour = Meta.currentUserTime.hour()  var timeHour = 24    if(hour%timeHour > 0)    Email.sendMeEmail.skip()  else    Email.sendMeEmail.setSubject(Article.title)    Email.sendMeEmail.setBody(Article.content)    Email.sendMeEmail.setPlainTextBody(Article.content)  }
###","var hour = Meta.currentUserTime.hour()  var wday = Meta.currentUserTime.format('dddd').toLowerCase()    if(hour<8 || hour>=21 || (!wday.match(""sat"") && !wday.match(""sun"") && hour>=9 && hour<17) || (wday.match(""fri"") && hour>=17 && hour<19) || ((wday.match(""sat"") || wday.match(""sun"")) && hour<12)){    Email.sendMeEmail.skip()  }"
25,facebook only text post,"facebook only text post to runday
###
Code:
var hour = Meta.triggerTime.hour()  var minute = Meta.triggerTime.minute()                                                                                             ","var text = FacebookPages.newStatusMessageByPage.Text.replace(/.*/g, """");   if(text.indexOf(text) < 0) {    IfNotifications.sendNotification.skip(""Not related to FacebookPages"") }","facebook only text post to a new topic on slack
###
var Message = FacebookPages.newPagePostMessage.Message  Slack.postToChannel.setMessage(Message)   Slack.postToChannel.addToQueue()  Slack.postToChannel.sendToChannel()   FacebookPages.newPagePostMessage.sendRepliesToFeed.skip('Posted to Slack')
###",Facebook.newStatusMessageByYou.From Facebook.newStatusMessageByYou.Message Facebook.newStatusMessageByYou.UpdatedAt
26,Sleep peacefully knowing you will receive a phone call alert if your door is opened during sleeping hours (10pm to 6am).,"Sleep peacefully knowing you will receive a phone call alert if your door is opened during sleeping hours (10pm to 6am).
###
Code:
var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay > 22 || timeOfDay < 6) {     IfNotifications.sendNotification.skip(""Not a weekday"") }   else {      IfNotifications.sendNotification.skip(""Not sleeping hours"") }      } else {      IfNotifications.sendNotification.skip(""Not","var hour = Meta.currentUserTime.hour()  if (hour < 22 && hour > 6) {   PhoneCall.callMyPhone.skip(""Not during sleeping hours"") }","Sleep peacefully knowing you will receive a phone call alert if your door is opened during sleeping hours (10pm to 6am).
###
if (Meta.currentUserTime.hour() < 22 || Meta.currentUserTime.hour() > 6) {   PhoneCall.callMyPhone.skip() } else {   IfNotifications.sendNotification.skip() }","var hour = Meta.currentUserTime.hour()  if (hour < 22 && hour > 6) {   PhoneCall.callMyPhone.skip(""Not during sleeping hours"") }  else{  }"
27,Videos of YouTube subscriptions to Todoist - links open in ProTube,"Videos of YouTube subscriptions to Todoist - links open in ProTube
###
Code:
var url = 'https: //www.youtube.com/user/2?hl=en&w=2&ts=1&ved=0&ved_dd=0&ved_dd_msec=0'  var url_format = 'utf-8'  var url_format2 = 'utf-8'  var url_format3 = 'utf-8'  var url_format4 = 'utf-8'  var url_format5 = 'utf-8'","var url = url.replace(/(https?:\/\/v=youtu\.be\/)/g, "";  var ID = url;    if(url[2] !== undefined) {   Todoist.createTask.skip(""Not related to YouTube"") }","Videos of YouTube subscriptions to Todoist - links open in ProTube
###
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 7) {    ProTube.setAutoplay.skip()  } else {    ProTube.setAutoplay.play()  }
###
var tags = Trigger.EntryTags  if (tags.length > 0 && tags[0] == ""youtube"") {    Todoist.setTask.skip()  } else {    Todoist.setTask.addToTodoList.setTaskTitle(Trigger.EntryTitle + ""\n\n"" + Trigger.EntryLink)  }
###
if (timeOfDay >= 7 && timeOfDay < 10) {    Todoist.setTask.skip()  } else {    Todoist.setTask.sendNotification.skip()  }","var url;    url=Youtube.newPublicVideoFromSubscriptions.Url  var ID;    url = url.replace(/(>|<)/gi,'').split(/(vi\/|v=|\/v\/|youtu\.be\/|\/embed\/)/);    if(url[2] !== undefined) {      ID = url[2].split(/[^0-9a-z_\-]/i);      ID = ID[0];    }    else {      ID = url;    }    Todoist.createTask.setTaskContent(""pt2:"
28,"This will automatically turn on the WiZ light(s) of your choice when you enter the area you have defined, unless it's currently sunny outside.","This will automatically turn on the WiZ light(s) of your choice when you enter the area you have defined, unless it's currently sunny outside.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 8 ) {     WemoLight.attributeWemoOnDiscrete.skip()  } else {    WemoLight.attributeWemoOnDiscrete.setBrightnessAllowed()  }    WemoLight.attributeWemoOnDiscrete.skip()  } ",if (parseInt(Weather.currentWeather[0].SunriseAt);    !==SunsetAt) {   WiZLighting.attributeLsOnDiscrete.skip()  },"This will automatically turn on the WiZ light(s) of your choice when you enter the area you have defined, unless it's currently sunny outside.
###
var meta:any = Trigger.EntryTrigger.Metadata var afterHours:number = parseInt(meta.afterHours, 10); var afterHoursInMinutes:number = afterHours * 60; var sunrise:any = moment(Weather.currentWeather[0].SunriseAt); var sunset:any = moment(Weather.currentWeather[0].SunsetAt); var currentTime:any = moment(); var currentTimeAfterSunrise:boolean = currentTime.isAfter(sunrise); var currentTimeBeforeSunset:boolean = currentTime.isBefore(sunset); if (currentTimeAfterSunrise && currentTimeBeforeSunset) {   WiZ.turnOn.skip(`It's currently daytime, so we're skipping the turn on command`); } else {   WiZ.turnOn.wait(afterHoursInMinutes); }",let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {    Wiz.turnOn.skip(`Its still daytime so we're leaving the lights off`); }
29,"The app sends you notifications for stories by The verge, between 8 Am and 11 PM and saves stories to Feedly during silent hours.","The app sends you notifications for stories by The verge, between 8 Am and 11 PM and saves stories to Feedly during silent hours.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()    if (timeOfDay > 22 || timeOfDay < 8 ) {        Feedly.createNewEntryFeedly.skip(""Too late"") }    else {        Feedly.createNewEntryFeedly.skip(""Not a weekday"") }       }   else {   ","var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay > 22 || timeOfNight < 8 ) {   IfNotifications.sendNotification.skip(""Too late"") }","The app sends you notifications for stories by The verge, between 8 Am and 11 PM and saves stories to Feedly during silent hours.
###
var title = Trigger.EntryTitle var hour = Meta.currentUserTime.hour()  if (hour < 22 && hour > 7) {    IfNotifications.sendNotification.setMessage(title)  }  else {    Feedly.createNewEntryFeedly.setUrl(Trigger.EntryUrl)  }    Feedly.createNewEntryFeedly.setUserVisible(false)  IfNotifications.sendNotification.setSound('glass')","var timeOfDay = Meta.currentUserTime.hour();    if (timeOfDay > 22 || timeOfDay < 8) {    IfNotifications.sendNotification.skip(""Too late; saving to Feedly"");  } else {    Feedly.createNewEntryFeedly.skip(""Sending notification instead"");  }"
30,"If gcal has an event named ""Work"" set the Ecobee to away until transition.","If gcal has an event named ""Work"" set the Ecobee to away until transition.
###
Code:
var hour = Meta.triggerTime.hour()    if (hour < 22 || hour > 9) {   Ecobee.away.skip() }   else {   Ecobee.away.setScene.skip() }   }    Ecobee.away.setScene.setSceneAlignment(Ecobee.away.setSceneAlignment(0.0, 0))   }    Ecobee.away.","if (GoogleCalendar.eventFromSearchStarts.Title.toUpperCase() != ""WORK"") {   Ecobee.climateNextTransition.skip() }","If gcal has an event named ""Work"" set the Ecobee to away until transition.
###
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay > 8 && timeOfDay < 18) {    Ecobee.setSchedule.skip(""Outside of work hours"")  } else {    Ecobee.setSchedule.setTransitionHour(22).setTransitionDay(1).setTransitionMonth(12).setMode(""Away"")  }","if (GoogleCalendar.eventFromSearchStarts.Title.toUpperCase() != ""WORK"") {   Ecobee.climateNextTransition.skip() }"
31,This Applet posts to a Slack channel when there's a service alert on Rapid Ride D line between the hours of 7-10am.,"This Applet posts to a Slack channel when there's a service alert on Rapid Ride D line between the hours of 7-10am.
###
Code:
var Hour = Meta.currentUserTime.hour()    if (Hour < 7 || Hour > 10) {   Slack.postToChannel.skip(""Outside of commuting hours"") }   if (Hour > 19 || Hour > 10) {   Slack.postToChannel.skip(""Not a weekday"") }   if (Hour < 17 || Hour > 10) {   Slack.postToChannel.skip(""Not commuting","var Hour = Meta.currentUserTime.hour()   if (Hour < 7 || Hour > 10) {   Slack.postToChannel.skip(""Outside of commuting hours"") }","This Applet posts to a Slack channel when there's a service alert on Rapid Ride D line between the hours of 7-10am.
###
var Hour = Meta.currentUserTime.hour()  if (Hour <7 || Hour > 10) {    Slack.postToChannel.skip(""Outside of commuting hours"")  } else {    RapidRide.serviceAlertsOnRapidRideDLine.postToSlack.skip(""No service alert"")  }","var Hour = Meta.currentUserTime.hour()   if (Hour < 7 || Hour > 10) {   Slack.postToChannel.skip(""Outside of commuting hours"") }"
32,Hey Chicago: this Applet will send you a notification from the IFTTT app when there's an alert during your morning commute (7-9am on weekdays).,"Hey Chicago: this Applet will send you a notification from the IFTTT app when there's an alert during your morning commute (7-9am on weekdays).
###
Code:
var Hour = Meta.currentUserTime.hour() var Day = Meta.currentUserTime.day()   if (Hour <7 || Hour > 9) {    IfNotifications.sendNotification.skip(""Outside of morning commuting hours"") }    if (Day == 6 || Day == 7) {    IfNotifications.sendNotification.skip(""Not a weekday"") }","var Hour = Meta.currentUserTime.hour() var Day    Hour <7 || Hour > 9) {   IfNotifications.sendNotification.skip(""Outside of morning commuting hours"") }   if (Day == 6 || Day == 7){  }  if (!Hour < 7 || (Hour > 9 && Hour > 19) { {  }","Hey Chicago: this Applet will send you a notification from the IFTTT app when there's an alert during your morning commute (7-9am on weekdays).
###
var Day = Meta.currentUserTime.day() var Hour   = Meta.currentUserTime.hour()   if (Day == 6 || Day == 7) {   IfNotifications.sendNotification.skip() }   if (Hour < 7 || Hour > 9) {   IfNotifications.sendNotification.skip() }","var Day = Meta.currentUserTime.day() var Hour = Meta.currentUserTime.hour()  if (Day == 6 || Day ==7) {   IfNotifications.sendNotification.skip(""Not a weekday"") }  if (Hour < 7 || Hour > 9) {   IfNotifications.sendNotification.skip(""Not commuting hours"") }"
33,Set a Yeelight Scene when sunset from Monday to Friday,"Set a Yeelight Scene when sunset from Monday to Friday
###
Code:
if (Meta.currentUserTime.locale('en').isoWeekday() < 6) {   Yeelight.setScene.skip('Not Weekdays'); } else {  Yeelight.setScene.skip('Not Weekends'); } }  if (Meta.currentUserTime.locale('en').isoWeekday() >= 6) {   Yeelight.setScene.skip('Not Weeks'); } else {  Yeelight.setScene.skip('Not Days'); } }  if (Meta.current",if (Meta.currentUserTime.locale('en').isoWeekday() < 6) {   Yeelight.setScene.skip('Not Weekdays'); },"Set a Yeelight Scene when sunset from Monday to Friday
###
if (Meta.currentUserTime.day() == 6 || Meta.currentUserTime.day() == 7) {   Yeelight.setScene.skip(""Not Weekdays"") }  else {   Yeelight.setScene.setSceneName(""Sunset"") }  Yeelight.setScene.setBrightness(""100"")  Yeelight.setScene.setColorMode(""rgb"")  Yeelight.setScene.setColorTemp(""2500K"")",if (Meta.currentUserTime.locale('en').isoWeekday() >= 6) {   Yeelight.setScene.skip('Not Weekdays'); }
34,Closes the Main Gate every hour after 9 PM and until 7AM the next day.,"Closes the Main Gate every hour after 9 PM and until 7AM the next day.
###
Code:
var hour = Meta.triggerTime.hour()     if (hour <7 || hour > 7) {           Gate.close()  }     else {                                                         ",var hour = Meta.triggerTime.hour()   if (hour < 7 && hour > 21) {    Gogogate.closeDoor.skip()  },"Closes the Main Gate every hour after 9 PM and until 7AM the next day.
###
let timeOfDay = Meta.triggerTime.hour()    if (timeOfDay >= 7 || timeOfDay < 21) {      IfNotifications.sendRichNotification.skip(`Good night, don't forget to close the gate`) } else {      IfNotifications.sendRichNotification.skip(`We're good`) }",var hour     = Meta.triggerTime.hour()     if (hour > 7 && hour < 21) {    Gogogate.closeDoor.skip()  }
35,Dim Hue lights when motion detected on Arlo in the night,"Dim Hue lights when motion detected on Arlo in the night
###
Code:
var timeOfDay = Meta.currentUserTime.hour()    if (timeOfDay >= 22 || timeOfDay < 8 ) {    Hue.setBrightnessAllHue.skip()  } else {      Hue.setBrightnessAllHue.setColorAllHue.skip()  }    }     if (timeOfDay >= 17 || timeOfDay < 8 ) {     Hue.setBrightnessAllHue.skip",var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay > 7 && timeOfNight < 19) {   Hue.setBrightnessAllHue.skip() },"Dim Hue lights when motion detected on Arlo in the night.
###
if (Meta.currentUserTime.hour() > 22 || Meta.currentUserTime.hour() < 6 ) {   Hue.dimHueLight.skip(); } else {    Arlo.detectMotion.on( function(event) {    Hue.dimHueLight.setBrightness(event.MotionDetectedInImage.isMoving?""20"":""100"");   }); }",var timeOfDay = Meta.currentUserTime.hour();  if (timeOfDay > 7 && timeOfDay < 19) {   Hue.setBrightnessAllHue.skip() }
36,Turn light on if time is after 7pm or before 7am,"Turn light on if time is after 7pm or before 7am
###
Code:
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 7 ) {      } else {        Lifx.switchAction.skip()  }      } else {      Lifx.switchAction.setAction(   Lifx.currentUserTime.hour()     Lifx.switchAction.setAction(  Lifx.currentUserTime.minute",var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay >= 7 || timeofDay < 21) {   Lifx.turnOn.skip()  },"Turn light on if time is after 7pm or before 7am
###
if(Meta.currentUserTimeHour() > 19 || Meta.currentUserTimeHour() < 7){  }else{   Ecobee.holdHeating.skip();  }",if ((Meta.currentUserTime.hour() <= 19) || (Meta.currentUserTime.hour() >= 7)) {     WemoLightSwitch.attributeLsOnDiscrete.skip(); }
37,This Applet sends you an email when there's a service alert on Rapid Ride A line between the hours of 7-10am and 5-7pm.,"This Applet sends you an email when there's a service alert on Rapid Ride A line between the hours of 7-10am and 5-7pm.
###
Code:
var Hour = Meta.currentUserTime.hour()    if (Hour < 7 || Hour > 10) {   Email.sendMeEmail.skip(""Outside of commuting hours"") }   if (Hour > 19 || Hour > 10) {   Email.sendMeEmail.skip(""Not a weekday"") }   if (Hour < 17 || Hour > 10) {   Email.sendMeEmail.","var Hour = Meta.currentUserTime.hour()   if (Hour <7 || (Hour > 10 && Hour < 17) || Hour > 19) {   Email.sendMeEmail.skip(""Outside of commuting hours"") }","This Applet sends you an email when there's a service alert on Rapid Ride A line between the hours of 7-10am and 5-7pm.
###
var Hour = Meta.currentUserTime.hour() var Day = Meta.currentUserTime.day()  if (Hour < 7 || (Hour > 10 && Hour < 17) || Hour > 19) {    Email.sendMeEmail.skip(""Outside of commuting hours"") }  if (Hour > 17 || (Hour < 7 && Day == 6)) {    Email.sendMeEmail.skip(""Not a weekday"") }  var Alert = Transit.serviceAlerts.AlineRapidRide.Text    Email.sendMeEmail.setSubject(Alert)    Email.sendMeEmail.setBody(Alert)
###","var Hour = Meta.currentUserTime.hour()   if (Hour <7 || (Hour > 10 && Hour < 17) || Hour > 19) {   Email.sendMeEmail.skip(""Outside of commuting hours"") }"
38,"Your lights will turn on when you're heading to a location, only if the time is after 8pm.","Your lights will turn on when you're heading to a location, only if the time is after 8pm.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 8 ) {      IfNotifications.sendNotification.skip(""Too late"") }  else {       IfNotifications.sendNotification.skip(""Not a weekday"") }      } else {      IfNotifications.sendNotification.skip(""Not commuting hours"") }",var hour = Meta.currentUserTime.hour()  if (hour < 20) {   Lifx.turnOn.skip() },"Your lights will turn on when you're heading to a location, only if the time is after 8pm. This Applet is based on your current location and does not require your home location to be set in your Philips Hue app.
###
let timeOfDay = Meta.currentUserTime.hour();    if (timeOfDay < 20) {    PhilipsHue.turnOnAllHue.skip();  } else {    PhilipsHue.turnOnAllHue.setAutoConfirm(true);  }",var hour = Meta.currentUserTime.hour()  if (hour < 20) {   Lifx.turnOn.skip() }
39,"We have your date night planned ahead of time, just tell us where and what day works for you! Impress your significant other every week with a new plan.","We have your date night planned ahead of time, just tell us where and what day works for you! Impress your significant other every week with a new plan.
###
Code:
var Hour = Meta.triggerTime.hour()    if (Hour < 17 || Hour > 19) {     ImpressMe.sendMeEmail.skip(""Too late"") }    if (Hour < 17 || Hour > 19) {     ImpressMe.sendMeEmail.skip(""Not Late"") }    if (Hour < 17 || Hour > 19) { ",let optionOne = Math.floor((Math.random() * Trakt.recommendedMovies.length)) Email.sendMeEmail.setSubject(`It's night date night!`),"We have your date night planned ahead of time, just tell us where and what day works for you! Impress your significant other every week with a new plan.
###
if (Mon.day() === ""Sunday"") {   Wandr.plan.setDescription(""Wine Tasting at Winepress"");   Wandr.plan.setLocation(""Winepress, 1500 Sunset Ave""); }  if (Mon.day() === ""Monday"") {   Wandr.plan.setDescription(""Movie Night at the Roxy"");   Wandr.plan.setLocation(""Roxy Theatre, 932 Dundas St W""); }  if (Mon.day() === ""Tuesday"") {   Wandr.plan.setDescription(""Dinner at Gusto 101"");   Wandr.plan.setLocation(""Gusto 101, 101 Portland St""); }  if (Mon.day() === ""Wednesday"") {   Wandr.plan.setDescription(""Sushi at Guu with a View"");   Wandr.plan.setLocation(""Guu with a View, 110 Queen St W""); }  if (Mon.day() === ""Thursday"") {   Wandr.plan.setDescription(""Cocktails at the AGO"");   Wandr.plan.setLocation(""Art Gallery of Ontario, 317 Dundas St W""); }  if (Mon.day() === ""Friday"") {   Wandr.plan.setDescription(""Date Night at Pai Northern Thai"");   Wandr.plan.setLocation(""Pai Northern Thai, 18 Duncan St""); }  if (Mon.day() === ""Saturday"") {   Wandr.plan.setDescription(""Brunch at The Keg"");   Wandr.plan.setLocation(""The Keg Steakhouse, 176 Yonge St""); }  if (Mon.day() === ""Sunday"") {   Wandr.plan.setDescription(""Sunday Funday at The Monarch Tavern"");   Wandr.plan.setLocation(""The Monarch Tavern, 12 Clinton St W""); }  Wandr.plan.setTime(""7:","let optionOne = Math.floor((Math.random() * Trakt.recommendedMovies.length)) let optionTwo = Math.floor((Math.random() * Yelp.searchBusiness.length)) Email.sendMeEmail.setSubject(`It's night date night!`) Email.sendMeEmail.setBody(`Tonight you should watch ${Trakt.recommendedMovies[optionOne].MovieTitle}, and order dinner from ${Yelp.searchBusiness[optionTwo].BusinessName}! `)"
40,"Which ever color tier your latest Super Chat message is, your Hue lights will change to match that color!","Which ever color tier your latest Super Chat message is, your Hue lights will change to match that color!
###
Code:
let color = Meta.currentUserTime.locale('en').toLowerCase()  if (color == 0) {   Hue.setBrightnessAllHue.skip() } else {   Hue.setBrightnessAllHue.setColorAllHue.skip() }    if (color == 1) {   Hue.setBrightnessAllHue.skip() } else {   Hue.setBrightnessAllHue.setColor","if (Youtube.newSuperchat.ColorTier == ""Light blue"") {   Hue.setColorAllHue.setBrightness(""#0092ff"") }","Which ever color tier your latest Super Chat message is, your Hue lights will change to match that color!
###
let Colorgenre = Youtube.newSuperchat.Color;  let Colordarker = Colorgenre.replace(/#/, """");  let HexToRgb = [""R"", ""G"", ""B""].map(h => (Colordarker.length > (h.length + 2) ? HexToRgb[h][0] : Colordarker[h] );  Hue.setColorAllHue.setColorAllHue(HexToRgb[0] + "","" + HexToRgb[1] + "","" + HexToRgb[2]);  let delay = (Math.random() * 1000 + 500).toFixed();  Hue.setColorAllHue.delay(parseInt(delay));  GoogleSheets.appendToGoogleSpreadsheet.setValues([""Message"", ""Color"", ""Color Code""], ["""",Colorgenre,Colordarker]);  let hueEmail = Email.sendMeEmail.setSubject(Colorgenre);  hueEmail.setBody(""Your Hue lights have been changed to match the color of your latest Super Chat message: "" + Colorgenre);  hueEmail.setReplyTo(""hueemail@hueemail.com"");  hueEmail.setHtmlToText(false);
###","if (Youtube.newSuperchat.ColorTier == ""Light blue"")   {Hue.setColorAllHue.setColor(""#0092ff"")} if (Youtube.newSuperchat.ColorTier == ""Blue"")   {Hue.setColorAllHue.setColor(""#4148b2"")}"
41,Example use case: You left work and going home on public transport and you need someone to pick you up from the station.,"Example use case: You left work and going home on public transport and you need someone to pick you up from the station.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()    if (timeOfDay > 22 || timeOfDay < 8 ) {                                                                  ","var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay >= 15 || timeHour < 20) {    AndroidMessages.sendAMessage.skip(""Outside of commuting hours"") }","Example use case: You left work and going home on public transport and you need someone to pick you up from the station. This applet will send you an reminder before you leave work to call someone for pick up.
###
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay > 17 && timeOfDay < 8) {   IfNotifications.sendNotification.skip(""Too Early"") } else {   IfNotifications.sendNotification.setMessage(""Remember to call for pick up"") } }",var timeOfDay = Meta.currentUserTime.hour() var dayOfWeek = Meta.currentUserTime.isoWeekday()  if (!((timeOfDay >= 15 && timeOfDay <= 20 ) && (dayOfWeek >= 1 && dayOfWeek <= 5))) {      AndroidMessages.sendAMessage.skip(`Incorrect Hour: ${timeOfDay} and Day: ${dayOfWeek} combination`) }
42,This applet will turn your eWeLink 1 channel switch on or off when entering an area between 6pm and 6am. Example: Turn the front lights on when arriving home between 6pm and 6am.,"This applet will turn your eWeLink 1 channel switch on or off when entering an area between 6pm and 6am. Example: Turn the front lights on when arriving home between 6pm and 6am.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay >= 18 || timeOfDay < 6 ) {        Ewelink.turnOnAllDiscrete.skip()  } else {        Ewelink.turnOnDiscrete.skip()  }    ",var timeOfDay = Meta.currentUserTime.hour();   if (timeOfDay > 18 || timeOfSleep < 6) {    Ewelink.switchAction.skip();  },"This applet will turn your eWeLink 1 channel switch on or off when entering an area between 6pm and 6am. Example: Turn the front lights on when arriving home between 6pm and 6am.
###
var timeOfDay = Meta.currentUserTime.hour();    if (timeOfDay > 18 || timeOfDay < 6) {    Ewelink.switchAction.skip();  } else {    Ewelink.switchAction.execute();  }",var timeOfDay = Meta.currentUserTime.hour();    if (timeOfDay > 18 || timeOfDay < 6) {      } else {    Ewelink.switchAction.skip();  }
43,This Applet sends you a heads-up notification when there's a DART rider alert during weekday commute hours (7-10am and 5-7pm).,"This Applet sends you a heads-up notification when there's a DART rider alert during weekday commute hours (7-10am and 5-7pm).
###
Code:
var Hour = Meta.currentUserTime.hour() var Day = Meta.currentUserTime.day()   if (Hour <7 || Hour > 10) {   IfNotifications.sendNotification.skip(""Outside of commuting hours"") }   if (Day == 6 || Day == 7) {   IfNotifications.sendNotification.skip(""Not a weekday"") }   if (Hour >","var Hour = Meta.currentUserTime.hour() var Day    Hour <7 || (Hour > 10 && Hour < 17) || Hour > 19) {   IfNotifications.sendNotification.skip(""Outside of commuting hours"") }   if (Day == 6 || Day == 7) { }  else {  }","This Applet sends you a heads-up notification when there's a DART rider alert during weekday commute hours (7-10am and 5-7pm).
###
if (Meta.currentUserTime.hour() < 7 || (Meta.currentUserTime.hour() > 10 && Meta.currentUserTime.hour() < 17) || Meta.currentUserTime.hour() > 19 ) {   IfNotifications.sendNotification.skip(""Outside of commuting hours""); }  else if (Meta.currentUserTime.hour() > 21 || Meta.currentUserTime.hour() < 5 ) {   IfNotifications.sendNotification.skip(""After commuting hours""); }  else {   Feedly.createNewEntryFeedly.skip(""No new alerts""); }","var Hour = Meta.currentUserTime.hour() var Day = Meta.currentUserTime.day()   if (Hour <7 || (Hour > 10 && Hour < 17) || Hour > 19) {   IfNotifications.sendNotification.skip(""Outside of commuting hours"") }   if (Day == 6 || Day == 7) {   IfNotifications.sendNotification.skip(""Not a weekday"") }"
44,"Turns on lights when you arrive home, unless it's currently sunny.","Turns on lights when you arrive home, unless it's currently sunny.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 8 ) {        IfNotifications.sendNotification.skip(""Outside of morning hours"") }  else {         IfNotifications.sendNotification.skip(""Not a weekday"") }        } else {        IfNotifications.sendNotification.skip(""Not commuting",var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay > 7 && timeOfSunset < 19) {    Wyzecam.lightTurnOn.skip()  },"Turns on lights when you arrive home, unless it's currently sunny.
###
var sunrise = moment(Weather.currentWeather[0].SunriseAt); var sunset = moment(Weather.currentWeather[0].SunsetAt); var currentTime = Meta.currentUserTime; var afterSunrise = currentTime.isAfter(sunrise); var beforeSunset = currentTime.isBefore(sunset); if (afterSunrise && beforeSunset) {    Wyzecam.turnOn.skip(""Its still daytime so we're leaving the lights off"") } else {    Wyzecam.turnOn.skip(""We're heading home so let's turn on the lights"") }",let sunrise = moment(Weather.currentWeather[0].SunriseAt);  let sunset = moment(Weather.currentWeather[0].SunsetAt);  let currentTime = Meta.currentUserTime;  let afterSunrise = currentTime.isAfter(sunrise);  let beforeSunset = currentTime.isBefore(sunset);   if (afterSunrise && beforeSunset) {     Wyzecam.lightTurnOn.skip(`Its still daytime so we're leaving the lights off`);  }
45,"Feel safer when someone rings your doorbell at night. With this applet, your hue lights will automatically turn on if someone rings your Ring doorbell after 10pm.","Feel safer when someone rings your doorbell at night. With this applet, your hue lights will automatically turn on if someone rings your Ring doorbell after 10pm.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay >= 22 || timeOfDay < 10 ) {      Hue.turnOnAllHue.skip()  } else {      Hue.turnOnAllHue.setColor(`${timeOfDay}`)  }     } else {      Hue",var timeOfDay = Meta.currentUserTime.hour()   if (timeOfDay > 22 || timeOfNight < 8 ) {    Hue.turnOnAllHue.skip()  },"Feel safer when someone rings your doorbell at night. With this applet, your hue lights will automatically turn on if someone rings your Ring doorbell after 10pm.
###
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay > 22) {     Hue.turnOnAllHue.skip(""Too early"")  } else {     Hue.turnOnAllHue.setMessage(""Ring doorbell"")  }
###",var timeOfDay = Meta.currentUserTime.hour()    if (timeOfDay <= 22 || timeOfDay > 8 ) {       Hue.turnOnAllHue.skip()  }
46,This Applet posts your pinned photos on Pinterest to Tumblr.,"This Applet posts your pinned photos on Pinterest to Tumblr.
###
Code:
Pinterest.newPinOnYourBoard.EntryPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhotoURL Tumblr.createPhoto",Pinterest.aNewPinOnYourBoard.Description Tumblr.createPhotoPost,"This Applet posts your pinned photos on Pinterest to Tumblr.
###
var title = Trigger.EntryTitle var url = ""http: var tumblrTitle = title.replace(/[^a-zA-Z0-9]+/g, ""_"")  tumblrTitle = tumblrTitle.toLowerCase()  var tumblrPhotoUrl = url.match(/(https:\/\/\S+)/)[1]  var tumblrCaption = title  var tumblrDescription = """"  if(url.indexOf(""pinboard"") == -1) {    tumblrDescription += ""Source: "" + title    }  if(url.indexOf(""pic"") != -1) {    tumblrDescription += ""Original image URL: "" + url    }  var tumblrPost = tumblrPhotoUrl + ""\n"" + tumblrCaption + ""\n"" + tumblrDescription  Post.newPhoto.setTumblrPhoto(tumblrTitle, tumblrPost)  Post.newPhoto.setTumblrCaption(tumblrCaption)  Post.newPhoto.setTumblrDescription(tumblrDescription)  Post.newPhoto.setTumblrPhotoUrl(tumblrPhotoUrl)
###",Pinterest.aNewPinOnYourBoard.Description Tumblr.createPhotoPost
47,"This applet will reward you 1p for every 10 metres you cycle or run, from a pot of your choice, using Strava.","This applet will reward you 1p for every 10 metres you cycle or run, from a pot of your choice, using Strava.
###
Code:
var distance = Math.floor(Math.random() * distance/1000).toFixed(1).toFixed(2).toFixed(3)); var amount = distance/1000; Monzo.potDeposit.setAmount(amount.toFixed(2)); Monzo.potDeposit.setAmount(amount.toFixed(3)); Monzo.potDeposit.setAmount(amount.toFixed(4)); Monzo.pot",var distance = parseInt(Strava.newActivityByYou.DistanceMeters); var amount = distance/1000; Monzo.potDeposit.setAmount(amount.toFixed(2));,"This applet will reward you 1p for every 10 metres you cycle or run, from a pot of your choice, using Strava.
###
if (parseInt(Strava.newActivityPublicFeed.DistanceKm) % 10 > 0) {   Monzo.potDeposit.skip() } else {   Monzo.potDeposit.setAmountInAccountCurrency(1) } Monzo.potDeposit.setPot('Strava Activity Pots')",var distance = parseInt(Strava.newActivityByYou.DistanceMeters); var amount = distance/1000; Monzo.potWithdraw.setAmount(amount.toFixed(2));
48,A detail report of your pet activity sent along to dropbox,"A detail report of your pet activity sent along to dropbox
###
Code:
var hour = Meta.triggerTime.hour()  var minute = Meta.triggerTime.minute()      if(hour%time > 0 && minute%10 > 0 )     Dropbox.appendToGoogleSheets.skip()                                             Dropbox.appendToGoogleSheets.skip()  ",var hour = Meta.triggerTime.hour()  var timeHour = 24    if(hour%timeHour > 0 && hour%10 > 0 )   Dropbox.appendToTextFileDb.skip(),"A detail report of your pet activity sent along to dropbox.
###
var title = ""Pet Monitor""; var folder = ""Pet Monitor"";  var minute = Meta.triggerTime.minute()  var second = Meta.triggerTime.second()  var currentTime = minute*60+second  var timestamp = moment(Meta.triggerTime).format('MMMM Do YYYY, h:mm:ss a');  var petReport =  ""Time of day: "" +  moment(currentTime).hour() + "":"" +  moment(currentTime).minute()  var petReport =  petReport  Dropbox.appendToTextFile.setFilename(title)  Dropbox.appendToTextFile.setFolder(folder)  Dropbox.appendToTextFile.setContent(petReport)  Dropbox.appendToTextFile.setFormat(""text/plain"")",var hour = Meta.triggerTime.hour()  var timeHour = 24  var minute = Meta.triggerTime.minute()    if(hour%timeHour > 0 && minute%10 > 0 )    Dropbox.appendToTextFileDb.skip()
49,"Your lights will turn on when you're heading to a location, only if the time is after 8pm.","Your lights will turn on when you're heading to a location, only if the time is after 8pm.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 22 || timeOfDay < 8 ) {      IfNotifications.sendNotification.skip(""Too late"") }  else {       IfNotifications.sendNotification.skip(""Not a weekday"") }      } else {      IfNotifications.sendNotification.skip(""Not commuting hours"") }",var hour = Meta.currentUserTime.hour()  if (hour < 20) {   Lifx.turnOn.skip() },"Your lights will turn on when you're heading to a location, only if the time is after 8pm.
###
if (Meta.currentUserTime.hour() < 20) {   Lifx.setScene.skip(`Too early in the day.`); } else {   Lifx.setScene.skip(`Skipping this time.`); } } else {   Lifx.setScene.skip(`Skipping this time.`); } } } catch (e) {   Lifx.setScene.skip(e); }",var hour = Meta.currentUserTime.hour()  if (hour < 20) {   Lifx.turnOn.skip() }
50,If doorbell rings beween 21h and 6h then toggle Hue lights on.,"If doorbell rings beween 21h and 6h then toggle Hue lights on.
###
Code:
var timeOfDay = Meta.currentUserTime.hour()     if (timeOfDay >= 22 || timeOfDay < 6 ) {     Hue.turnOnAllHue.skip()  } else {       Hue.turnOnAllHue.setColor(   Hue.currentUserTime.hour()                            ",var timeOfDay = Meta.currentUserTime.hour();   if (timeOfDay >= 21 || timeHour < 6) {   Hue.turnOnAllHue.skip()  },"If doorbell rings beween 21h and 6h then toggle Hue lights on.
###
var hour = Meta.currentUserTime.hour()  if (hour > 17 || hour < 6) {    Hue.setBrightnessHue.skip()  } else {    Hue.setBrightnessHue.skip()  }",var TimeOfDay = Meta.currentUserTime.hour()  if (TimeOfDay >= 21 || TimeOfDay < 6){   } else {  Hue.toggleAllHue.skip()  }
51,Post notes you create in Notebook as tweets,"Post notes you create in Notebook as tweets
###
Code:
var tweet = Twitter.newTweetByUser.Text  if (Tweet.indexOf(Twitter.newTweetByUser) < 0) {                                                                                   ","if (Trigger.Notebook.EntryTitle.indexOf(""Notebook"") < 0) {   Twitter.postNewTweet.skip(); }","Post notes you create in Notebook as tweets
###
const title=Notebooks.createNote.Title var text=Notebooks.createNote.Entry var url=Notebooks.createNoteUrl  if (title.length > 134 && text.length > 140) {   Twitter.postNewTweet.skip(""Too long"") } else {   Twitter.postNewTweet.setTweet(title +"" ""+ text) }    Twitter.postNewTweet.setLinkPreview(url)","var htmlContent = Notebook.newTextNotecardInNotebook.NotecardHtmlContent; var text = htmlContent.replace(/<\/?[^>]+>/gi, "" ""); Twitter.postNewTweet.setTweet(text);"
52,"Enter your home address on the map and when you enter the radius your Hue lights will turn on, unless it's still light outside!","Enter your home address on the map and when you enter the radius your Hue lights will turn on, unless it's still light outside!
###
Code:
let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {   Hue.turnOnAllHue.skip(`",var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay >= 7 && timeOfSun < 19) {   Hue.turnOnAllHue.skip() },"Enter your home address on the map and when you enter the radius your Hue lights will turn on, unless it's still light outside!
###
let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {    Hue.turnOnAllHue.skip(`Too early to turn on the lights!`); }  else {    Hue.turnOnAllHue.setLaterTonight(`Turning on Hue lights!`);  }",let sunrise = moment(Weather.currentWeather[0].SunriseAt); let sunset = moment(Weather.currentWeather[0].SunsetAt); let currentTime = Meta.currentUserTime; let afterSunrise = currentTime.isAfter(sunrise); let beforeSunset = currentTime.isBefore(sunset);  if (afterSunrise && beforeSunset) {    Hue.turnOnAllHue.skip(`Its still daytime so we're leaving the lights off`); }
53,"When spending on Eating Out, take the amount from a Pot of your choosing","When spending on Eating Out, take the amount from a Pot of your choosing
###
Code:
if ( Monzo.cardPurchase.Category == ""Eating Out"" ) {   Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency)  } else {    Monzo.potWithdraw.skip(""Not an Eating Out Purchase"")  }  } else {    Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency)  }  } else {    Monzo.pot","if ( Monzo.cardPurchase.Category == ""Eating Out"" ) {    if (Monzo.potWithdraw.AmountInAccountCurrency >= $10) {  }","When spending on Eating Out, take the amount from a Pot of your choosing (e.g. ""Eating Out"")
###
var location = Monzo.cardPurchase.MerchantName;  if (location.toLowerCase().indexOf('eating out') < 0) {     Monzo.potWithdraw.setAmount(parseInt(Monzo.cardPurchase.AmountInAccountCurrency));   } else {      Monzo.potWithdraw.skip();  }","if ( Monzo.cardPurchase.Category == ""Eating Out"" ) {    Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency)  } else {    Monzo.potWithdraw.skip(""Not an Eating Out Purchase"")  }"
54,"When paying for your Bus Fare or an Uber, take the amount from a Pot of your choosing. Works with anything that is categorised as ""Transport"" by Monzo.","When paying for your Bus Fare or an Uber, take the amount from a Pot of your choosing. Works with anything that is categorised as ""Transport"" by Monzo.
###
Code:
var Hour = Meta.currentUserTime.hour()    if (Hour < 17 || Hour > 19) {    Monzo.potWithdraw.setAmount(Hour.toFixed(2)); }   else {    Monzo.potWithdraw.skip(""Not a Transport Purchase"") }      return; }    Monzo.potWithdraw.","if ( Monzo.cardPurchase.Category == ""Transport"" ) {    if (Monzo.potWithdraw.AmountInAccountCurrency.toFixed(MonzoCardPurchase.AmountCurrency)   == -1) {  }","When paying for your Bus Fare or an Uber, take the amount from a Pot of your choosing. Works with anything that is categorised as ""Transport"" by Monzo.
###
var category = Monzo.cardPurchase.Category; if (category == ""Transport"") {   Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency); } else {   Monzo.potWithdraw.skip(""Not a Transport Purchase""); }
###","if ( Monzo.cardPurchase.Category == ""Transport"" ) {    Monzo.potWithdraw.setAmount(Monzo.cardPurchase.AmountInAccountCurrency)  } else {    Monzo.potWithdraw.skip(""Not a Transport Purchase"")  }"
55,"If the the moisture level measure by your Whisperer sensor is above 80%, skip all schedules for next few days.","If the the moisture level measure by your Whisperer sensor is above 80%, skip all schedules for next few days.
###
Code:
if (parseInt(Netro.sensorData.Moisture) < 80){   Netro.noWater.skip() }  else{   Netro.noWater.setAmount(Netro.sensorData.Moisture) }  Netro.noWater.setAmount(Netro.sensorData.MoistureLow) }  Netro.noWater.skip() }  else{   Netro.no",if(parseInt(Netro.sensorData.Moisture)<80){   Netro.noWater.skip() },"If the the moisture level measure by your Whisperer sensor is above 80%, skip all schedules for next few days.
###
var hour = Meta.triggerTime.hour()  var hourString = hour.toString()   if(hour % 24 > 0 && hour < 23) {     Firefly.skip    } else {      Firefly.skip    }",if(parseInt(Netro.sensorData.Moisture)<80){   Netro.noWater.skip() }
56,"This applet will append today's current Weather Underground report at the time you specify to a stream named ""weather-underground-today"" in a data.world dataset.","This applet will append today's current Weather Underground report at the time you specify to a stream named ""weather-underground-today"" in a data.world dataset.
###
Code:
var hour = Meta.currentUserTime.hour()  var timeHour = 24    if (hour%timeHour > 0 && hour%10 > 0 ) {                                                   ","const forecast = (Weather.currentWeatherAtTime as any) const pairs = Object.getOwnPropertyNames(forecast).map(prop => prop + ""||"" + forecast[prop]) Datadotworld.append.setPayload(pairs.join(""|||""))","This applet will append today's current Weather Underground report at the time you specify to a stream named ""weather-underground-today"" in a data.world dataset.
###
var timeOfDay = Meta.currentUserTime.hour()  if (timeOfDay > 7 && timeOfDay < 19) {    IfNotifications.sendNotification.skip(""Too late to commute"")  } else {    IfNotifications.sendNotification.setMessage(""Tomorrows weather: "")    WeatherUnderground.currentWeather.setAppender(IfNotifications.sendNotification.Message + ""\n"" + WeatherUnderground.currentWeather.Weather + "" Temperature: "" + WeatherUnderground.currentWeather.TempF + "" Wind: "" + WeatherUnderground.currentWeather.WindMph + "" Precipitation: "" + WeatherUnderground.currentWeather.PrecipTodayString)  }","const forecast = (Weather.currentWeatherAtTime as any) const pairs = Object.getOwnPropertyNames(forecast).map(prop => prop + ""||"" + forecast[prop]) Datadotworld.append.setPayload(pairs.join(""|||""))"
57,"This Applet sends you a notification from the IFTTT app when a new ""Ask Slashdot"" article is posted.","This Applet sends you a notification from the IFTTT app when a new ""Ask Slashdot"" article is posted.
###
Code:
var title = Trigger.EntryTitle var subject = 'Ask Slashdot'  if (title.indexOf(subject) < 0) {   IfNotifications.sendNotification.skip(""Not an 'Ask Slashdot' article"") }    if (subject.indexOf(subject) < 0) {   IfNotifications.sendNotification.skip(""Not an 'Ask Slashdot' article"") }   else {    If","var title = Trigger.EntryTitle var subject = 'Ask Slashdot'  if (title.indexOf(subject) < 0) {    IfNotifications.sendNotification.skip(""Not an "" + title) }","This Applet sends you a notification from the IFTTT app when a new ""Ask Slashdot"" article is posted.
###
var title = Trigger.EntryTitle  var filter = ""Ask Slashdot""  if (title.indexOf(filter) < 0) {   IfNotifications.sendNotification.skip(""Not an Ask Slashdot article"") } else {   IfNotifications.sendNotification.setMessage(""New Ask Slashdot article: "" + title) }","var title = Trigger.EntryTitle var subject = 'Ask Slashdot'  if (title.indexOf(subject) < 0) {    IfNotifications.sendNotification.skip(""Not an 'Ask Slashdot' article"") }"
